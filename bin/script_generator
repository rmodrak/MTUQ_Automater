#!/usr/bin/env python

import os
import sys

from os.path import isdir, exists
from mtuq_automater import generate_script




if __name__=='__main__':

    #
    # OVERVIEW
    #
    #   Generates MTUQ scripts by substituting event-specific values into
    #   region-specific templates
    #

    #
    # USAGE
    #
    #   Event-specific values, including origin time and location, are simply 
    #   read from a PySEP file. These values are then substituted into one 
    #   or more region-specific templates. (The way in which the templates are
    #   determined is somewhat involved, as explained in the detailed notes)
    #
    #   Imagine we have already run PySEP for a given event, but have yet
    #   to run MTUQ. Suppose that 
    #
    #   - PYSEP_FILE is the PySEP input file
    #   - PYSEP_DIR is the PySEP download directory containing SAC waveforms
    #     and weight files
    #
    #   The script generator can then be invoked as follows:
    #
    #     >> script_generator  PYSEP_FILE  PYSEP_DIR
    #

    #
    # DETAILED NOTES
    #
    #  User-supplied templates can be specified in the PySEP input
    #  file as follows:
    #
    #  mtuq_automater:
    #    templates:
    #    - path_or_url_1
    #    - path_or_url_2
    #    ...
    #
    #  If no user-supplied templates are given, the script generator 
    #  will try to construct a list of templates based on
    #  
    #    - proximity of the event to known sites of interest
    #      (see templates/sites)
    #    - Flinn-Engdahl regionalization (see templates/flinn_engdahl)
    #
    #  If the event occurs away from any currently implemented sites or regions,
    #  the script generator falls back to 1D reference models
    #  (for example templates/ak135f)
    #

    args = sys.argv[1:]

    if len(args) < 2:
        raise Exception('Too few input arguments')

    elif len(args) > 3:
        raise Exception('Too many input arguments')

    if len(args) == 2:
        input_file = sys.argv[1]
        assert exists(input_file)

        input_dir = sys.argv[2]
        assert isdir(input_dir)

        output_dir = os.getcwd()

    elif len(args) == 3:
        input_file = sys.argv[1]
        assert exists(input_file)

        input_dir = sys.argv[2]
        assert isdir(input_dir)

        output_dir = sys.argv[3]
        assert isdir(output_dir)


    generate_script(input_file, input_dir, output_dir)

